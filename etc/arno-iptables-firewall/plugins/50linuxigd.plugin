# ------------------------------------------------------------------------------------------
#            -= Arno's iptables firewall - UPnP plugin =-
#
PLUGIN_NAME="UPnP plugin"
PLUGIN_VERSION="0.12"
PLUGIN_CONF_FILE="linuxigd.conf"
#
# Last changed          : February 14, 2008
# Requirements          : kernel 2.6 + linuxigd
# Comments              : An UPnP-enabled application can tell linuxigd what public ports
#                         have to be forwarded back to the application.
#                         This plugin adds a new chain into the FORWARD chain
#                         where the UPnP daemon "linuxigd" can insert its ports.
#                         In "upnpd.conf" you must set the forward_chain_name = UPNP_FORWARD
#
# Author                : (C) Copyright 2007-2008 by Joerg Straube
# Homepage              : http://joerg.li/
# Email                 : j o e r g DOT s t r a u b e AT i a e t h DOT c h
#                         (note: you must remove all spaces and substitute the @ and the .
#                         at the proper locations!)
# ------------------------------------------------------------------------------------------
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# version 2 as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# ------------------------------------------------------------------------------------------

# Plugin start function
plugin_start()
{
  # Show who we are:
  echo " $PLUGIN_NAME v$PLUGIN_VERSION"

  # Create new UPNP_FORWARD chain to be used by linuxigd (aka upnpd):
  $IPTABLES -N UPNP_FORWARD

  # Insert rule into the FORWARD chain:
  for eif in $EXT_IF; do
    $IPTABLES -A FORWARD -i $eif -o ! $eif -j UPNP_FORWARD
  done

  return 0
}


# Plugin stop function
plugin_stop()
{
  return 0
}


# Plugin status function
plugin_status()
{
  return 0
}


# Check sanity of ie. environment
plugin_sanity_check()
{
  return 0
}


############
# Mainline #
############

# Check where to find the config file
if [ -n "$PLUGIN_CONF_PATH" ]; then
  CONF_FILE="$PLUGIN_CONF_PATH/$PLUGIN_CONF_FILE"
else
  CONF_FILE="$PLUGIN_PATH/$PLUGIN_CONF_FILE"
fi

# Preset plugin return value (1=error)
PLUGIN_RET_VAL=1

# Check if the config file exists
if [ ! -e "$CONF_FILE" ]; then
  printf "\033[40m\033[1;31m WARNING: Config file \"$CONF_FILE\" not found!\n          Plugin \"$PLUGIN_NAME\" not loaded!\033[0m\n" >&2
else
  # Source the plugin config file
  . "$CONF_FILE"

  if [ "$ENABLED" = "1" ]; then
    # Only proceed if environment ok
    if plugin_sanity_check; then
      case $PLUGIN_CMD in
        start|'') PLUGIN_RET_VAL=0; plugin_start;;
        stop    ) PLUGIN_RET_VAL=0; plugin_stop;;
        status  ) PLUGIN_RET_VAL=0; plugin_status;;
        *       ) printf "\033[40m\033[1;31m ERROR: Invalid plugin option \"$PLUGIN_CMD\"!\n          Plugin \"$PLUGIN_NAME\" not loaded!\033[0m\n" >&2;;
      esac
    fi
  else
    PLUGIN_RET_VAL=0
  fi
fi
