# ------------------------------------------------------------------------------
#       -= Arno's iptables firewall - Parasitic (SNAT) Network plugin =-
# ------------------------------------------------------------------------------

# To actually enable this plugin make ENABLED=1:
# ------------------------------------------------------------------------------
ENABLED=0

# ------------------------------------------------------------------------------
# Parasitic Network
#
# Allows "clients" on the same subnet to use this device as a gateway upstream.
# This network of "clients" is the Parasitic Network, SNAT'ed to this device's
# external interface(s).
#
# This Parasitic Network is useful for situations when the upstream firewall
# is not under your control and you desire added security for specific devices
# in your subnet.  Set the gateway address of Parasitic Network clients to an
# external IPv4 address of this device.
#
# Note: To be effective, be certain the Parasitic Network clients are IPv4-only
#
# (IPv4 Only)
# ------------------------------------------------------------------------------

# Specify which "clients" on your subnet that are allowed to use this device
# as a gateway. Define IPv4 addresses, IPv4 address ranges or a small CIDR.
# Example: "192.168.1.10 192.168.1.15 192.168.1.20-30"
# Must be defined, there is no default.
# ------------------------------------------------------------------------------
PARASITIC_NET_CLIENT_HOSTS=""

# The default external gateway interface is obtained from the first interface
# defined in the EXT_IF variable.
# Use PARASITIC_NET_IF to specify a different EXT_IF interface.
# Note: The PARASITIC_NET_CLIENT_HOSTS must be on this gateway interface subnet.
# ------------------------------------------------------------------------------
PARASITIC_NET_IF=""

################################################################################
# Use PARASITIC_NET_HOST_OPEN_xxx and PARASITIC_NET_HOST_DENY to restrict      #
# forwarded parasitic network traffic.                                         #
#                                                                              #
# By default all parasitic network packets are forwarded and NAT'ed upstream,  #
# unless one of the PARASATIC_NET_HOST_OPEN_xxx variables is specified. In     #
# that case the default policy for that protocol (TCP, UDP, ICMP, IP) will     #
# become deny, except for IP which always defaults to deny.                    #
################################################################################

# Put in the following variables which hosts you want to allow(open) for certain
# services
# TCP/UDP port format (PARASITIC_NET_HOST_OPEN_TCP & PARASITIC_NET_HOST_OPEN_UDP):
#       "host1,host2~port1,port2 host3,host4~port3,port4 ..."
#
# ICMP protocol format (PARASITIC_NET_HOST_OPEN_ICMP):
#       "host1 host2 ...." 
#
# IP protocol format (PARASITIC_NET_HOST_OPEN_IP):
#       "host1,host2~proto1,proto2 host3,host4~proto4,proto4 ..."
# ------------------------------------------------------------------------------
PARASITIC_NET_HOST_OPEN_TCP=""
PARASITIC_NET_HOST_OPEN_UDP=""
PARASITIC_NET_HOST_OPEN_ICMP=""
PARASITIC_NET_HOST_OPEN_IP=""

# Put in the following variables which hosts you want to deny for certain
# services
# TCP/UDP port format (PARASITIC_NET_HOST_DENY_TCP & PARASITIC_NET_HOST_DENY_UDP):
#       "host1,host2~port1,port2 host3,host4~port3,port4 ..."
#
# ICMP protocol format (PARASITIC_NET_HOST_DENY_ICMP):
#       "host1 host2 ...." 
#
# IP protocol format (PARASITIC_NET_HOST_DENY_IP):
#       "host1,host2~proto1,proto2 host3,host4~proto4,proto4 ..."
# ------------------------------------------------------------------------------
PARASITIC_NET_HOST_DENY_TCP=""
PARASITIC_NET_HOST_DENY_UDP=""
PARASITIC_NET_HOST_DENY_ICMP=""
PARASITIC_NET_HOST_DENY_IP=""

# Enable (1) logging of denied Parasitic Network packets
# ------------------------------------------------------------------------------
PARASITIC_NET_DENY_LOG=1
